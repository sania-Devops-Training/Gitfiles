Certainly! Here are the steps to learn and use basic Git and GitHub commands:

### 1. **Install Git**
- **Windows**: Download and install Git Bash from [git-scm.com](https://git-scm.com/).
- **macOS**: Use Homebrew: `brew install git`.
- **Linux**: Use your package manager:
  - Debian/Ubuntu: `sudo apt-get install git`
  - Fedora: `sudo dnf install git`
  - CentOS/RHEL: `sudo yum install git`
  - Snap: `sudo snap install git`

### 2. **Configure Git**
Open your terminal or Git Bash and set your username and email:
```bash
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"
```

### 3. **Initialize a Git Repository**
Choose a directory where you want to create your repository:
```bash
mkdir my_project
cd my_project
git init
```
This initializes a new Git repository.

### 4. **Create Files and Directories**
Create some files and directories:
```bash
mkdir dir1 dir2
touch dir1/file1.txt dir2/file2.txt
```

### 5. **Check the Status of Your Repository**
Check which files are untracked or modified:
```bash
git status
```

### 6. **Add Files to the Staging Area**
Add all files to the staging area:
```bash
git add .
```

### 7. **Commit Changes**
Commit your changes with a message:
```bash
git commit -m "Initial commit"
```

### 8. **Create a Repository on GitHub**
- Go to [GitHub](https://github.com/), log in or sign up.
- Click on the "+" icon in the top right and select "New repository".
- Name your repository (e.g., `my_project`), add a description, choose public or private, and click "Create repository".

### 9. **Connect Local Repository to GitHub**
Add the remote repository URL:
```bash
git remote add origin https://github.com/yourusername/my_project.git
```

### 10. **Push Local Repository to GitHub**
Push your local changes to the remote repository:
```bash
git branch -M main
git push -u origin main
```

### 11. **Make Changes and Commit Again**
Edit files or create new ones:
```bash
echo "Hello World" > dir1/file1.txt
```
Check the status, add to staging, and commit:
```bash
git status
git add .
git commit -m "Added Hello World to file1.txt"
```
Push the changes:
```bash
git push origin main
```

### 12. **Pull Changes from Remote Repository**
If there are changes made in the remote repository, you can pull them:
```bash
git pull origin main
```

### 13. **View Commit History**
To see the commit history:
```bash
git log
```
For a simplified one-line log:
```bash
git log --oneline
```

### 14. **Viewing and Reverting Changes**
- View a specific commit:
  ```bash
  git show <commit_id>
  ```
- Revert to a previous commit:
  ```bash
  git revert <commit_id>
  ```

### Summary of Basic Commands
- **git init**: Initialize a new Git repository.
- **git status**: Show the working tree status.
- **git add .**: Add all changes to the staging area.
- **git commit -m "message"**: Commit changes with a message.
- **git push origin main**: Push changes to the remote repository.
- **git pull origin main**: Pull changes from the remote repository.
- **git log**: View commit history.
- **git show <commit_id>**: View specific commit details.

By following these steps, you'll be able to set up and use Git and GitHub effectively for version control and collaboration.
